name: AWS Lambda Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install Production Dependencies
        run: npm ci --production

      - name: Copy package.json to dist
        run: mv package.json dist/ && mv package-lock.json dist/ || true

      - name: Zip
        run: (cd dist && zip -r ../function.zip .)

      - name: Deploy to AWS Lambda
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: clipquiz-api
          zip_file: function.zip
          handler: lambda.handler
          environment: NODE_ENV=production,DATABASE_HOST=${{ vars.DATABASE_HOST }},DATABASE_NAME=${{ vars.DATABASE_NAME }},DATABASE_PASSWORD=${{ vars.DATABASE_PASSWORD }},DATABASE_PORT=${{ vars.DATABASE_PORT }},DATABASE_USERNAME=${{ vars.DATABASE_USERNAME }},DATABASE_SSL=${{ vars.DATABASE_SSL }}

  migration:
    runs-on: ubuntu-22.04
    environment: production
    needs: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Migrate Database
        run: npm run migration:migrate
        env:
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USERNAME: ${{ vars.DATABASE_USERNAME }}
          DATABASE_SSL: ${{ vars.DATABASE_SSL }}
